/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package me.shubhamjain.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class FlightRequestMetric extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2660739438310139085L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FlightRequestMetric\",\"namespace\":\"me.shubhamjain.model\",\"fields\":[{\"name\":\"request_id\",\"type\":\"string\"},{\"name\":\"flight_id\",\"type\":\"string\"},{\"name\":\"status\",\"type\":\"int\"},{\"name\":\"created_at\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FlightRequestMetric> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FlightRequestMetric> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FlightRequestMetric> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FlightRequestMetric> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FlightRequestMetric> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FlightRequestMetric to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FlightRequestMetric from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FlightRequestMetric instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FlightRequestMetric fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence request_id;
  private java.lang.CharSequence flight_id;
  private int status;
  private java.lang.CharSequence created_at;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FlightRequestMetric() {}

  /**
   * All-args constructor.
   * @param request_id The new value for request_id
   * @param flight_id The new value for flight_id
   * @param status The new value for status
   * @param created_at The new value for created_at
   */
  public FlightRequestMetric(java.lang.CharSequence request_id, java.lang.CharSequence flight_id, java.lang.Integer status, java.lang.CharSequence created_at) {
    this.request_id = request_id;
    this.flight_id = flight_id;
    this.status = status;
    this.created_at = created_at;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return request_id;
    case 1: return flight_id;
    case 2: return status;
    case 3: return created_at;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: request_id = (java.lang.CharSequence)value$; break;
    case 1: flight_id = (java.lang.CharSequence)value$; break;
    case 2: status = (java.lang.Integer)value$; break;
    case 3: created_at = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'request_id' field.
   * @return The value of the 'request_id' field.
   */
  public java.lang.CharSequence getRequestId() {
    return request_id;
  }


  /**
   * Sets the value of the 'request_id' field.
   * @param value the value to set.
   */
  public void setRequestId(java.lang.CharSequence value) {
    this.request_id = value;
  }

  /**
   * Gets the value of the 'flight_id' field.
   * @return The value of the 'flight_id' field.
   */
  public java.lang.CharSequence getFlightId() {
    return flight_id;
  }


  /**
   * Sets the value of the 'flight_id' field.
   * @param value the value to set.
   */
  public void setFlightId(java.lang.CharSequence value) {
    this.flight_id = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public int getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(int value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'created_at' field.
   * @return The value of the 'created_at' field.
   */
  public java.lang.CharSequence getCreatedAt() {
    return created_at;
  }


  /**
   * Sets the value of the 'created_at' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.CharSequence value) {
    this.created_at = value;
  }

  /**
   * Creates a new FlightRequestMetric RecordBuilder.
   * @return A new FlightRequestMetric RecordBuilder
   */
  public static me.shubhamjain.model.FlightRequestMetric.Builder newBuilder() {
    return new me.shubhamjain.model.FlightRequestMetric.Builder();
  }

  /**
   * Creates a new FlightRequestMetric RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FlightRequestMetric RecordBuilder
   */
  public static me.shubhamjain.model.FlightRequestMetric.Builder newBuilder(me.shubhamjain.model.FlightRequestMetric.Builder other) {
    if (other == null) {
      return new me.shubhamjain.model.FlightRequestMetric.Builder();
    } else {
      return new me.shubhamjain.model.FlightRequestMetric.Builder(other);
    }
  }

  /**
   * Creates a new FlightRequestMetric RecordBuilder by copying an existing FlightRequestMetric instance.
   * @param other The existing instance to copy.
   * @return A new FlightRequestMetric RecordBuilder
   */
  public static me.shubhamjain.model.FlightRequestMetric.Builder newBuilder(me.shubhamjain.model.FlightRequestMetric other) {
    if (other == null) {
      return new me.shubhamjain.model.FlightRequestMetric.Builder();
    } else {
      return new me.shubhamjain.model.FlightRequestMetric.Builder(other);
    }
  }

  /**
   * RecordBuilder for FlightRequestMetric instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FlightRequestMetric>
    implements org.apache.avro.data.RecordBuilder<FlightRequestMetric> {

    private java.lang.CharSequence request_id;
    private java.lang.CharSequence flight_id;
    private int status;
    private java.lang.CharSequence created_at;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(me.shubhamjain.model.FlightRequestMetric.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.request_id)) {
        this.request_id = data().deepCopy(fields()[0].schema(), other.request_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.flight_id)) {
        this.flight_id = data().deepCopy(fields()[1].schema(), other.flight_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.created_at)) {
        this.created_at = data().deepCopy(fields()[3].schema(), other.created_at);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing FlightRequestMetric instance
     * @param other The existing instance to copy.
     */
    private Builder(me.shubhamjain.model.FlightRequestMetric other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.request_id)) {
        this.request_id = data().deepCopy(fields()[0].schema(), other.request_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.flight_id)) {
        this.flight_id = data().deepCopy(fields()[1].schema(), other.flight_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.created_at)) {
        this.created_at = data().deepCopy(fields()[3].schema(), other.created_at);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'request_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getRequestId() {
      return request_id;
    }


    /**
      * Sets the value of the 'request_id' field.
      * @param value The value of 'request_id'.
      * @return This builder.
      */
    public me.shubhamjain.model.FlightRequestMetric.Builder setRequestId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.request_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'request_id' field has been set.
      * @return True if the 'request_id' field has been set, false otherwise.
      */
    public boolean hasRequestId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'request_id' field.
      * @return This builder.
      */
    public me.shubhamjain.model.FlightRequestMetric.Builder clearRequestId() {
      request_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'flight_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getFlightId() {
      return flight_id;
    }


    /**
      * Sets the value of the 'flight_id' field.
      * @param value The value of 'flight_id'.
      * @return This builder.
      */
    public me.shubhamjain.model.FlightRequestMetric.Builder setFlightId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.flight_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'flight_id' field has been set.
      * @return True if the 'flight_id' field has been set, false otherwise.
      */
    public boolean hasFlightId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'flight_id' field.
      * @return This builder.
      */
    public me.shubhamjain.model.FlightRequestMetric.Builder clearFlightId() {
      flight_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public int getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public me.shubhamjain.model.FlightRequestMetric.Builder setStatus(int value) {
      validate(fields()[2], value);
      this.status = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public me.shubhamjain.model.FlightRequestMetric.Builder clearStatus() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_at' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedAt() {
      return created_at;
    }


    /**
      * Sets the value of the 'created_at' field.
      * @param value The value of 'created_at'.
      * @return This builder.
      */
    public me.shubhamjain.model.FlightRequestMetric.Builder setCreatedAt(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.created_at = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'created_at' field has been set.
      * @return True if the 'created_at' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'created_at' field.
      * @return This builder.
      */
    public me.shubhamjain.model.FlightRequestMetric.Builder clearCreatedAt() {
      created_at = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FlightRequestMetric build() {
      try {
        FlightRequestMetric record = new FlightRequestMetric();
        record.request_id = fieldSetFlags()[0] ? this.request_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.flight_id = fieldSetFlags()[1] ? this.flight_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.status = fieldSetFlags()[2] ? this.status : (java.lang.Integer) defaultValue(fields()[2]);
        record.created_at = fieldSetFlags()[3] ? this.created_at : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FlightRequestMetric>
    WRITER$ = (org.apache.avro.io.DatumWriter<FlightRequestMetric>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FlightRequestMetric>
    READER$ = (org.apache.avro.io.DatumReader<FlightRequestMetric>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.request_id);

    out.writeString(this.flight_id);

    out.writeInt(this.status);

    if (this.created_at == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.created_at);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.request_id = in.readString(this.request_id instanceof Utf8 ? (Utf8)this.request_id : null);

      this.flight_id = in.readString(this.flight_id instanceof Utf8 ? (Utf8)this.flight_id : null);

      this.status = in.readInt();

      if (in.readIndex() != 1) {
        in.readNull();
        this.created_at = null;
      } else {
        this.created_at = in.readString(this.created_at instanceof Utf8 ? (Utf8)this.created_at : null);
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.request_id = in.readString(this.request_id instanceof Utf8 ? (Utf8)this.request_id : null);
          break;

        case 1:
          this.flight_id = in.readString(this.flight_id instanceof Utf8 ? (Utf8)this.flight_id : null);
          break;

        case 2:
          this.status = in.readInt();
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.created_at = null;
          } else {
            this.created_at = in.readString(this.created_at instanceof Utf8 ? (Utf8)this.created_at : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










